/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                layer_0 {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | MO1 | SPC |   | ENT | MO2  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC 
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };

                layer_1 {
// -----------------------------------------------------------------------------------------
// |  TAB | PGDN |     |  UP |     | PGUP |   | INS |  `  |  -  |  =  |  \  | BKSP |
// | CTRL |      | LFT | DWN | RGT |      |   | DEL |  ~  |  _  |  +  |  |  |      |
// | SHFT | HOME |     |     |     | END  |   |     |     |     |     |     |      |
//                     | GUI |     | SPC  |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp PG_DN       &trans       &kp UP       &trans       &kp PG_UP       &kp INS     &kp GRAVE  &kp MINUS   &kp EQUAL    &kp BSLH     &kp BSPC
   &kp LCTRL  &trans          &kp LEFT     &kp DOWN     &kp RIGHT    &trans          &kp DEL     &kp TILDE  &kp UNDER   &kp PLUS     &kp PIPE     &trans
   &kp LSHFT  &kp HOME        &trans       &trans       &trans       &kp END         &trans      &trans     &trans      &trans       &trans       &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                layer_2 {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |     |  (  |  [  |  {  |     |   |     |  }  |  ]  |  )  |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6       &kp N7      &kp N8             &kp N9        &kp N0      &kp BSPC
   &kp LCTRL  &trans       &kp LPAR     &kp LBKT     &kp LBRC     &trans         &trans       &kp RBRC    &kp RBKT           &kp RPAR      &trans      &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans       &trans      &trans             &trans        &trans      &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                layer_3 {
// -----------------------------------------------------------------------------------------
// |  TAB |  !     |  @    |  #     |  $      |  %     |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |        |       |        |         |        |   |     |     |     |     |     |      |
// | SHFT |  Undo  |  Cut  |  Copy  |  Paste  |  Redo  |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp EXCL     &kp AT    &kp HASH     &kp DLLR      &kp PRCNT       &kp CARET    &kp AMPS     &kp KP_MULTIPLY &kp LPAR        &kp RPAR       &kp BSPC
   &kp LCTRL &kp F1       &kp F2    &kp F3       &kp F4        &kp F5          &kp F6       &kp F7       &kp F8          &kp F9          &kp F10        &kp F11
   &kp LSHFT &kp K_UNDO   &kp K_CUT &kp K_COPY   &kp K_PASTE   &kp K_REDO      &bt BT_CLR   &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4   &bt BT_SEL 5
                           &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                
        };				

	    conditional_layers {
	        
	        compatible = "zmk,conditional-layers";
	        
	        tri_layer {

	            if-layers = <1 2>;

	            then-layer = <3>;

	        };

	    };
};